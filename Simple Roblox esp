-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- ESP settings
local ESPEnabled = true

-- Create drawings
local outlines = {}
local connections = {}

-- Function to create lines and outlines
local function createLine() 
    local line = Drawing.new("Line")
    line.Color = Color3.new(1, 0, 0) -- Red color
    line.Thickness = 2
    return line
end

local function createOutline() 
    local outline = Drawing.new("Triangle")
    outline.Color = Color3.new(1, 1, 0) -- Yellow color
    outline.Filled = false
    outline.Thickness = 1
    return outline
end

-- Draw ESP for a player
local function drawESP(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    local rootPart = player.Character.HumanoidRootPart
    local head = player.Character:FindFirstChild("Head")

    -- Convert positions to screen space
    local headPos, headVisible = Workspace.CurrentCamera:WorldToViewportPoint(head.Position)
    local rootPos, rootVisible = Workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)

    if headVisible and rootVisible then
        -- Draw outline for head
        local outline = createOutline()
        outline.PointA = Vector2.new(headPos.X, headPos.Y)
        outline.PointB = Vector2.new(rootPos.X, rootPos.Y + 50) -- Slightly above the root
        outline.PointC = Vector2.new(headPos.X - 10, headPos.Y + 20)
        outline.Visible = true
        table.insert(outlines, outline)

        -- Draw lines to connect parts
        for _, part in pairs(player.Character:GetChildren()) do
            if part:IsA("MeshPart") or part:IsA("Part") then
                local partPos, visible = Workspace.CurrentCamera:WorldToViewportPoint(part.Position)
                
                if visible then
                    -- Create a line from Head to each part
                    local connection = createLine()
                    connection.From = outline.PointA
                    connection.To = Vector2.new(partPos.X, partPos.Y)
                    connection.Visible = true
                    table.insert(connections, connection)
                end
            end
        end
    end
end

-- Update ESP every frame
RunService.RenderStepped:Connect(function()
    if ESPEnabled then
        -- Clear previous outlines and connections
        for _, outline in pairs(outlines) do
            outline:Remove()
        end
        outlines = {}

        for _, connection in pairs(connections) do
            connection:Remove()
        end
        connections = {}

        -- Draw ESP for all players
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and (player.Team ~= LocalPlayer.Team or not LocalPlayer.Team) then 
                drawESP(player) 
            end
        end
    end
end)

-- Cleanup on player removal
Players.PlayerRemoving:Connect(function(player)
    for i = #outlines, 1, -1 do
        outlines[i]:Remove()
        table.remove(outlines, i)
    end
    for i = #connections, 1, -1 do
        connections[i]:Remove()
        table.remove(connections, i)
    end
end)
