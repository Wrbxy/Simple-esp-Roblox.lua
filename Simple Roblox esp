-- Get necessary services from Roblox
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- Table to hold ESP boxes and line connections associated with players' characters
local espBoxes = {}
local lineConnections = {}

-- Function to create an ESP box around a player's character
local function createESPBox(character)
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end -- Ensure the HumanoidRootPart exists

    -- Create a Box Handle Adornment
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Size = Vector3.new(4, 6, 2) -- Size of the ESP box
    espBox.Color3 = Color3.new(0, 0, 1) -- Color of the ESP box (blue)
    espBox.Transparency = 0.5 -- Semi-transparent
    espBox.ZIndex = 10
    espBox.Adornee = humanoidRootPart
    espBox.AlwaysOnTop = true -- Important to make it visible through walls
    espBox.Parent = humanoidRootPart -- Attach to HumanoidRootPart

    espBoxes[character] = espBox -- Store the ESP box for cleanup

    -- Cleanup the ESP box when character is removing
    character:Destroying:Connect(function()
        espBox:Destroy()
        espBoxes[character] = nil
    end)
end

-- Function to create a line between two points
local function createLine(from, to)
    local line = Instance.new("LineHandleAdornment")
    line.Length = (to - from).magnitude -- Set the line length accordingly
    line.Color3 = Color3.new(1, 0, 0) -- Color of the line (red)
    line.Transparency = 0 -- Fully visible
    line.ZIndex = 10
    line.AlwaysOnTop = true

    -- Set the points for the line
    line.PointA = from
    line.PointB = to
    line.Parent = Workspace

    table.insert(lineConnections, line) -- Store line for cleanup
end

-- Function to update line connections
local function updateLineConnections()
    -- Clean up existing lines
    for _, line in ipairs(lineConnections) do
        line:Destroy()
    end
    lineConnections = {}

    local players = Players:GetPlayers()
    for i = 1, #players do
        local playerA = players[i]
        if not playerA.Character or not playerA.Character:FindFirstChild("HumanoidRootPart") then continue end
        local rootA = playerA.Character.HumanoidRootPart

        for j = i + 1, #players do
            local playerB = players[j]
            if not playerB.Character or not playerB.Character:FindFirstChild("HumanoidRootPart") then continue end
            local rootB = playerB.Character.HumanoidRootPart
            
            -- Create a ray between the two HumanoidRootParts
            local direction = (rootB.Position - rootA.Position).unit
            local distance = (rootB.Position - rootA.Position).magnitude

            local raycastResult = Workspace:Raycast(rootA.Position, direction * distance)

            if not raycastResult then
                createLine(rootA.Position, rootB.Position) -- Draw line if not hitting anything
            end
        end
    end
end

-- Function to handle player joining
local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        createESPBox(character) -- Create ESP when the character is added
    end)
end

-- Connect player added events
Players.PlayerAdded:Connect(onPlayerAdded)

-- Optionally add existing players
for _, player in ipairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

-- Run the ESP update loop
RunService.RenderStepped:Connect(updateLineConnections)
