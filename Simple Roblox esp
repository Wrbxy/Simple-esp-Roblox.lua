local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

-- Function to create a line (bone) between two parts
local function createBone(part1, part2)
    if not part1 or not part2 then return end

    local distance = (part1.Position - part2.Position).Magnitude
    local midPoint = (part1.Position + part2.Position) / 2

    local line = Instance.new("Part")
    line.Size = Vector3.new(0.1, 0.1, distance) -- Thin line
    line.Anchored = true
    line.CanCollide = false
    line.BrickColor = BrickColor.new("Bright blue")
    line.Material = Enum.Material.Neon
    line.CFrame = CFrame.new(midPoint, part2.Position) * CFrame.new(0, 0, -distance / 2) -- Offset
    line.Parent = workspace

    -- Clean up the line after a duration
    Debris:AddItem(line, 5) -- Remove line after 5 seconds
end

-- Function to update the skeleton lines based on character parts
local function updateBones(character)
    local head = character:FindFirstChild("Head")
    local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
    local leftArm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftArm")
    local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightArm")
    local leftLeg = character:FindFirstChild("Left Leg") or character:FindFirstChild("LeftLeg")
    local rightLeg = character:FindFirstChild("Right Leg") or character:FindFirstChild("RightLeg")

    -- Create lines between relevant body parts
    if head and torso then createBone(head, torso) end
    if torso and leftArm then createBone(torso, leftArm) end
    if torso and rightArm then createBone(torso, rightArm) end
    if torso and leftLeg then createBone(torso, leftLeg) end
    if torso and rightLeg then createBone(torso, rightLeg) end
end

-- Function to handle character addition
local function onCharacterAdded(character)
    if character:WaitForChild("Humanoid") then
        local connection
        connection = RunService.RenderStepped:Connect(function()
            -- Clear previously drawn bones
            for _, obj in pairs(workspace:GetChildren()) do
                if obj:IsA("Part") and obj.BrickColor == BrickColor.new("Bright blue") then
                    obj:Destroy()
                end
            end
            
            -- Draw bones
            updateBones(character)
        end)

        -- Clean up the connection when the character is removed
        character.AncestryChanged:Connect(function(_, newParent)
            if not newParent then
                connection:Disconnect()
            end
        end)
    end
end

-- Function to create ESP for a player
local function createESPForPlayer(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

-- Apply ESP for all existing players
for _, player in ipairs(Players:GetPlayers()) do
    createESPForPlayer(player)
end

-- Apply ESP for new players joining the game
Players.PlayerAdded:Connect(createESPForPlayer)
